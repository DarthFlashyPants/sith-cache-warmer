{
  "name": "node-random",
  "version": "1.0.0",
  "description": "random.org client",
  "main": "random.js",
  "scripts": {
    "test": "mocha -R spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dlom/node-random.git"
  },
  "keywords": [
    "random",
    "random.org"
  ],
  "author": {
    "name": "Mark Old"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/dlom/node-random/issues"
  },
  "dependencies": {
    "request": "^2.34.0"
  },
  "devDependencies": {
    "mocha": "^1.18.2",
    "express": "^4.0.0",
    "eight-track": "^1.7.0",
    "chai": "^1.9.1"
  },
  "readme": "# node-random [![Build Status](https://travis-ci.org/dlom/node-random.svg?branch=master)](https://travis-ci.org/dlom/node-random)\n\nA [random.org](random.org) API client\n\n## Install\n\n`npm install node-random`\n\n## Usage\n\nThe `options` argument is always optional.\n\n`numbers` is an alias for `integers`\n\n`sequence` is an alias for `sequences`\n\n```javascript\nvar random = require(\"node-random\");\n\nrandom.integers(options, function(error, data) {\n    // data is an array of numbers\n});\n\nrandom.sequences(options, function(error, quota) {\n    // data is an array of numbers\n});\n\nrandom.strings(options, function(error, data) {\n    // data is an array of strings\n});\n\nrandom.quota(options, function(error, data) {\n    // data is an integer\n});\n```\n\n## Options Defaults\n\n### `random.integers`\n\nSee [here](http://www.random.org/clients/http/#integers) for the meanings (Option names are slightly different);\n\n* `number` - `1`\n* `minimum` - `0`\n* `maximum` - `10000`\n* `columns` - `1` (When this is more than 1, `data` is a 2D array -- rows by columns)\n* `base` - `10`\n* `random` - `\"new\"`\n\n### `random.sequences`\n\nSee [here](http://www.random.org/clients/http/#sequences) for the meanings (Option names are slightly different);\n\n* `minimum` - `0`\n* `maximum` - `10`\n* `columns` - `1` (When this is more than 1, `data` is a 2D array -- rows by columns)\n* `base` - `10`\n* `random` - `\"new\"`\n\n### `random.strings`\n\nSee [here](http://www.random.org/clients/http/#strings) for the meanings (Option names are slightly different);\n\n* `number` - `1`\n* `length` - `10`\n* `digits` - `true`\n* `upper` - `true`\n* `lower` - `true`\n* `unique` - `false`\n* `random` - `\"new\"`\n\n### `random.quota`\n\nSee [here](http://www.random.org/clients/http/#quota) for the meanings (Option names are slightly different);\n\n* `ip` - `\"\"`\n\n## Examples\n\n```javascript\nvar random = require(\"node-random\");\n\n// Get 2 random numbers between 1 and 6\nconsole.log(\"Rolling 2 dice\");\nrandom.numbers({\n    \"number\": 2,\n    \"minimum\": 1,\n    \"maximum\": 6\n}, function(error, data) {\n    if (error) throw error;\n    data.forEach(function(d) {\n        console.log(d);\n    });\n});\n\n// Get a random 3x3 grid and print the middle vertical row\nrandom.sequences({\n    \"minimum\": 1,\n    \"maximum\": 9,\n    \"columns\": 3\n}, function(error, data) {\n    if (error) throw error;\n    console.log(data);\n    console.log(data[0][1]);\n    console.log(data[1][1]);\n    console.log(data[2][1]);\n});\n\n// Get 20 different lowercase characters\nrandom.strings({\n    \"length\": 1,\n    \"number\": 20,\n    \"upper\": false,\n    \"digits\": false\n}, function(error, data) {\n   if (error) throw error;\n   console.log(data.join(\" and \"));\n});\n\n// Check your quota\nrandom.quota(function(error, quota) {\n    console.log(\"Remaining bytes: \" + quota)\n});\n```\n\n## Aliases\n\n* `random.numbers` = `random.integers`\n* `random.sequence` = `random.sequences`\n* `random.string` = `random.strings`\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/dlom/node-random",
  "_id": "node-random@1.0.0",
  "_shasum": "96d0e9fe554a4fd92c5ea26400ab4f4d31e883b4",
  "_from": "node-random@1.0.x",
  "_resolved": "https://registry.npmjs.org/node-random/-/node-random-1.0.0.tgz"
}
